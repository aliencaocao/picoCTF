import gmpy2
from Crypto.Util.number import *


def Pollards_p_1(N):
    a = 2
    n = 2
    while True:
        a = pow(a, n, N)
        res = gmpy2.gcd(a - 1, N)
        if res != 1 and res != N:
            # print('n =', n)
            # print('p =', res)
            return res
        n += 1


e = 65537
# n = 29222318805723953222364721676971742125010275013769475052931110866161804592311478704202558432070416333016652737173410680850046303841324913457753412432441924630014118481199509615827682076668620735180973121854888138747609529257538627904659481150492796248172446925771672891206547140024349550690297694379707548611377653574875199634063794283884523278929551933457275755536773148453652715967987713619243300553073576552907002819158138000362956532390141327793449552478168371256441219909754289639162425342999800131237347337516220937684356551660979999107858446560008352662051402896190454972582776607229135971184196950141859941001
# c = 13010514034607141562990961854253226627861002586197069546517673323412890814300986383680712969614149724108883933042503584882393498362658843505851729286866283790092858236292468941447618685586044626835557550501768025500143708643761124780657643596818313492632174224213481474976505657558397107646891344842030474580610063358971205834520023889891001993067256944887210213458968081751388423730232468384293570413751860971226254102868209638538149347492509555974694589612690294866044434722108701736832130486843522518480112266062028569177405257376202037932064333801240849051995453092216261557259012463852052902773972960583171478005
# n = int(n, 16)
# c = int(c, 16)
n = 17082208341522992518102046723428488592941272179173142874224104050396490465598665639645300286730866119041297435138263246277592129615649034468336107338672736396573921025624544069460358283626451455960981858510668492466073750504528206838117876101916891537876215435947797240111868521418100051015286783146178008909523168077185375344371155120494031214243292342278331667093137915515954693140214979784708108331250911497312907595827244937283831171446215945451429333265933486516172886043391929397965522171399092555008848368613975477743509843836031141099412368273509505943310954581644291854856280409153918237843530147817927185247
#c = 843105902970788695411197846605744081831851

p = Pollards_p_1(n)
q = n // p
assert p * q == n
print('p =', p)
print('q =', q)
# d = gmpy2.invert(e, (p - 1) * (q - 1))
# m = pow(c, d, n)
# byt = long_to_bytes(m)
# print(byt.decode('ascii', errors='ignore'))
